# Quick fuzz testing workflow for go-fsdt
# This workflow runs short fuzz tests for quick feedback during development

name: Quick Fuzz Testing

on:
  # Run on pull requests for quick feedback
  pull_request:
    branches: [ "main" ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'
  
  # Run on push to development branches
  push:
    branches-ignore: [ "main" ]
    paths:
      - '**.go'
      - 'go.mod'
      - 'go.sum'

jobs:
  quick-fuzz:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        fuzz-test:
          - FuzzFolderCreation
          - FuzzFileOperations
          - FuzzLinkOperations
          - FuzzFolderOperations
          - FuzzDiffOperations
          - FuzzEdgeCases
          - FuzzSerialization
          - FuzzMemoryStress
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: '1.23.2'

    - name: Install Go dependencies
      run: go mod download

    - name: Run Quick Fuzz Test - ${{ matrix.fuzz-test }}
      run: |
        echo "üß™ Running quick fuzz test: ${{ matrix.fuzz-test }}"
        echo "‚è±Ô∏è  Duration: 1 minute"
        echo "üë• Workers: 4"
        echo ""
        
        # Run the specific fuzz test for 1 minute
        timeout 90s go test -fuzz=${{ matrix.fuzz-test }} \
          -fuzztime=1m \
          -parallel=4 \
          -v || {
          echo "‚ùå Quick fuzz test ${{ matrix.fuzz-test }} found issues or timed out"
          exit 1
        }
        
        echo "‚úÖ Quick fuzz test ${{ matrix.fuzz-test }} completed successfully"

    - name: Upload Quick Fuzz Results
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: quick-fuzz-${{ matrix.fuzz-test }}
        path: |
          testdata/fuzz/${{ matrix.fuzz-test }}/
        retention-days: 7
